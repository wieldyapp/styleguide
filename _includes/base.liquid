<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Your page title</title>
  <link rel="stylesheet" href="/styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">
  <meta name=apple-mobile-web-app-status-bar-style content=black-translucent>
  <!--
    The page supports both dark and light color schemes,
    and the page author prefers dark.
  -->
  <meta name="color-scheme" content="dark light">
  <meta name="theme-color" content="#1f2023">
  <script>
    const leftWidth = localStorage.getItem('--base-nav-ideal-width')
      ?? getComputedStyle(document.documentElement).getPropertyValue('--base-nav-ideal-width');
    document.documentElement.style.setProperty('--base-nav-ideal-width', leftWidth);
  </script>
</head>

<body>
  {% include header.liquid %}
  {% include nav.liquid %}
  {{ content }}
</body>

<script async type=module src=//static.brickpile.app/main.js?v=3></script>
<script async type=module src=/scripts.js></script>
<script async type=module src="//cdn.jsdelivr.net/gh/wieldyapp/styleguide@main/index.esm.js"></script>
<script>

  const images = [...document.querySelectorAll("img-thumbnail")];

  [...document.querySelectorAll("select,input[type=range], toggle-switch[data-feature]")].map(el => {
    el.addEventListener("change", e => {
      if (el.nodeName == 'TOGGLE-SWITCH') {
        if (e.target.checked) {
          images.map(image => {
            image.setAttribute(e.target.dataset.feature, e.target.checked);
          });
        } else {
          images.map(image => {
            image.removeAttribute(e.target.dataset.feature);
          });
        }
      } else {
        if (e.target.value) {
          images.map(image => {
            image.setAttribute(e.target.dataset.feature, e.target.value);
          });
        } else {
          images.map(image => {
            image.removeAttribute(e.target.dataset.feature);
          });
        }
      }
    });
  });

  images.forEach((image, index) => {
    const menu = image.nextElementSibling;
    if(menu) {
      const button = menu.querySelector('button');
      button.addEventListener('click', async e => {
        try {
          console.log(image.getAttribute('src') + ',e-grayscale');
          const imgURL = image.getAttribute('src') + ',e-grayscale,fo-auto,ar-4-3';
          const data = await fetch(imgURL);
          const blob = await data.blob();
          await navigator.clipboard.write([
            new ClipboardItem({
              [blob.type]: blob
            })
          ]);
          console.log('Image copied.');
        } catch (err) {
          console.error(err.name, err.message);
        }
      });
    }
  });



</script>


</html>